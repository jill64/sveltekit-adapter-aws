name: Deploy - Test (Buffered)

on:
  push:
    branches: main
  pull_request_target:
    branches: main

concurrency: deploy-test-buffered${{ (github.event_name == 'pull_request_target' && '-dev') || '' }}

jobs:
  buffered-deploy:
    strategy:
      matrix:
        architecture: [lambda-mono, lambda-s3, edge-unbundled]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup Node.js
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4
        with:
          node-version: 20

      - name: Setup Bun
        uses: oven-sh/setup-bun@4bc047ad259df6fc24a6c9b0f9a0cb08cf17fbe5 # v2

      - name: Install Bun
        run: bun i

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Build
        run: bun run build:all
        env:
          STAGE: ${{ github.event_name == 'pull_request_target' && 'dev' || 'prod' }}
          BUFFERED_RESPONSE: 'TRUE'
          ADAPTER_ARCHITECTURE: ${{ matrix.architecture }}
          ADAPTER_FQDN: ${{ format('buffered.{0}.adapter-aws.com', matrix.architecture) }}
          ADAPTER_CERTIFICATE_ARN: ${{ (matrix.architecture == 'lambda-mono' && secrets.BUFFERED_LAMBDA_MONO_CERTIFICATE_ARN) || (matrix.architecture == 'lambda-s3' && secrets.BUFFERED_LAMBDA_S3_CERTIFICATE_ARN) || (matrix.architecture == 'edge-unbundled' && secrets.BUFFERED_EDGE_UNBUNDLED_CERTIFICATE_ARN)}}

  buffered-test:
    needs: buffered-deploy
    strategy:
      matrix:
        architecture: [lambda-mono, lambda-s3, edge-unbundled]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@4bc047ad259df6fc24a6c9b0f9a0cb08cf17fbe5 # v2

      - name: Install Bun
        run: bun i

      - name: Install Playwright
        run: bunx playwright install --with-deps

      - name: Test
        run: bunx playwright test
        env:
          ADAPTER_FQDN: ${{ github.event_name == 'pull_request_target' && ((matrix.architecture == 'lambda-mono' && vars.BUFFERED_LAMBDA_MONO_PREVIEW_URL) || (matrix.architecture == 'lambda-s3' && vars.BUFFERED_LAMBDA_S3_PREVIEW_URL) || (matrix.architecture == 'edge-unbundled' && vars.BUFFERED_EDGE_UNBUNDLED_PREVIEW_URL)) || format('buffered.{0}.adapter-aws.com', matrix.architecture) }}
          DEBUG_LOG: ${{ github.event_name }}
